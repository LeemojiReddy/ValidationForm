<!DOCTYPE html>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<html>
    <head>
        <title>Chat Server</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <script type="text/javascript">
            var websocket = new WebSocket("ws://localhost:8080/WebSockets/chatroomServerEndpoint");
            
            websocket.onmessage=function processMessage(message){
                if(message.data!=null)
                    messageTextArea.value+=message.data+"\n";
            }
            function sendMessage(){
                websocket.send(messageText.value);
                messageText.value="";
            }
        </script>
    </head>
    <body>
        <textarea id="messageTextArea" rows="10" cols="45"
            readonly="readOnly"></textarea><br/>
        <input type="text" id="messageText" size="50"/>
        <input type="button" value="send" onclick="sendMessage()"/>
    </body>
    </body>
</html>








/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package a;

import java.io.IOException;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.websocket.OnClose;
import javax.websocket.OnMessage;
import javax.websocket.OnOpen;
import javax.websocket.Session;
import javax.websocket.server.ServerEndpoint;


@ServerEndpoint("/chatroomServerEndpoint")
public class ChatRoomServerEndpoint {

    static Set<Session> chatroomUsers=Collections.synchronizedSet(new HashSet<Session>());
    
    @OnOpen
    public void handleOpen(Session userSession){
        chatroomUsers.add(userSession);
    }
    
    @OnMessage
    public void handleMessage(String message,Session userSession) throws IOException {
        String username=(String)userSession.getUserProperties().get("username");
         System.out.print("hello"+message);
        if(username==null){
            userSession.getUserProperties().put("username",message);
            
            userSession.getBasicRemote().sendText("You are now connected as:"+message);
            }
        else{
            Iterator <Session> iterator=chatroomUsers.iterator();
            while(iterator.hasNext()){
                iterator.next().getBasicRemote().sendText(username+" : "+message);
                }
        }
    }
    
    @OnClose
    public void handleClose(Session userSession){
        chatroomUsers.remove(userSession);
    }
    
}
